<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Django: GoDaddy </title>
  <link rel="stylesheet" href=".\css\study-notes.css">
</head>

<body>


<div class="hero-image">
  <img src=".\images\mtns.png" alt="WelcomeImg" class="Headerimage">
  <div class="Headeroverlay">
    <div class="Headertext"> </div>
  </div>
</div>


    
<div class="hero-image">
  <img src=".\images\mtns.png" alt="WelcomeImg" class="Headerimage">
  <div class="Headeroverlay">
    <div class="Headertext">Django: GoDaddy</div>
  </div>
</div>
    
    
<ul class="navBar">
  <li class="navBar"><a href="apis.htm" target="_blank">API's</a></li>
  <li class="navBar"><a href="Django_general.htm" target="_blank">Django: General</a></li>
  <li class="navBar"><a href="Django_Images.htm" target="_blank">Django: Images</a></li>
  <li class="navBar"><a href="Django_Database.htm" target="_blank">Django: Database</a></li>
  <li class="navBar"><a href="Django_Github.htm" target="_blank">Django: GitHub </a></li>
  <li class="navBar"><a href="Django_GoDaddy.htm" target="_blank">Django:      GoDaddy</a></li>
  <li class="navBar"><a href="VSCode.htm" target="_blank">VSCode</a></li>
</ul>



<br>
<br>
<br>
<br>
<br>
<br>


<h1 style="text-align:center;color: white;" >Django: GoDaddy </h1>



<div class="center_pag">
  <div class="pagination">
  <a href="#">&laquo;</a>
  <a href="#">1</a>
  <a href="#">2</a>
  <a href="#">3</a>
  <a href="#" class="active">4</a>
  <a href="#">&raquo;</a>
  </div>
</div>

<br>
<br>
<br>
<br>



<h1 style="text-align:center;color: white;" >RESTful API's</h1>

<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one">What is a RESTful API?</p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">Rest API: allows front end to communicate with cloud based server<br><br>
  API: how client communicates with server over HTTP protocol
  </p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one">Scaleable (can grow as market grows)</p>
  <p>Stateless</p>
  <p>High performance bc Cacheing is performed</p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\HTTP_Request1.png" alt="Img1" style="width:100%;height:100%;">
  </div>

  <div class="column content">
    <h1 class="one">CRUD</h1>
    <p class="one">
            <ol>A request has</ol>
            <li>Headers: contains API key or authentication data</li>
            <li>Operations</li>
            <li>specified endpoint its communicating with</li>
            <li>parameter/body</li>
    <br><br>
    </p>
    <p class="one">C: Create</p>
    <p class="one">R: Read</p>
    <p class="one">U: Update</p>
    <p class="one">D: Delete</p>
    <p class="one">Request gets response usually in JSON data</p>
  </div>
</div>


<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_RequestResponse.png" alt="Img1" style="width:100%;height:100%;">
  </div>

  <div class="column content">
    <h1 class="one">Types of APIs:</h1>
    <h1 class="one">SOAP, GRAPHQL, REST<br><br></h1>
    <p class="one"> Contents of Request to API :<br></p>
    <p class="one">Operations + Parameters/Body + Endpoint + Header</p>
    <p class="one">Operations: HTTP Request Methods/Protocols</p>
    <p class="one">Response: JSON data </p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\SDK.png" alt="Img1" style="width:100%;height:100%;">
  </div>

  <div class="column content">
    <h1 class="one">How to Call an API?</h1>
    <p class="one">By using an SDK: Software Development Kit </p>
    <p>This is a toolbox of tools that call API's for you</p>
    <p>SDK's in various languages: Java, Node.js, GO, Python</p>
  </div>
</div>


<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\SDK1.png" alt="Img1" style="width:100%;height:100%;">
  </div>

  <div class="column content">
    <h1 class="one">EX: JAVA SDK</h1>
    <p class="one">Instead of calling Request to API directly  </p>
    <p>Various methods in built into SDK are used to invoke these requests</p>
    <p>There will be a response but not necessarily in JSON, could be analyze
    response model object in java</p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\Rest_API2.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">What is a RESTful API?</h1>
    <p class="one"> An API defines the interfaces by which one piece of software
    communicates with another at the source level.</p>
    <p>API ensures source compatibility</p>
    <p>API defines a source interface</p>
    <p>API: merely interface
    piece of software that actually provides the API is known as the
    implementation of the API.</p>
    <p>provides abstraction by providing a standard set of interfaces—
    usually functions—that one piece of software (typically, although not
    necessarily, a higher-level piece) can invoke from another piece of
    software (usually a lower-level piece).</p>
  </div>
</div>


<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Protocol.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">API: Application Programming Interface</h1>
    <p class="one">
    Structured request and response
    </p>
    <p>Allows us to request raw JSON data from a server</p>
    <p>API: waiter runing requests btwn software</p>
    <p>API Standard: JSON or SOAP </p>
    <p>need to fit the shape or pattern based on JSON or SOAP to sucessfully compelte the request</p>
    
    <p></p>
    <p></p>
    <p></p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\GMAIL_API.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">REQUEST: pattern for making APIs
        pattern for naming resources that the server provides</h1>
    <p class="one"> include
    https method
    Service Name : Google API
    then gmail/user/userID/doc </p>
    <p>most API's use HTTP requests</p>
    <p class="one">
    <ul>Can use various requests:</ul>
    
    <li>GET     - retry resources from server</li>
    <li>POST     - create New Resource on server</li>
    <li>PUT/PATCH     - change or Update whole/partial resource </li>
    <li>DELETE    - Removes resources from server</li>
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="imgbox" style="background-color:#ebcfb5">
  <img src=".\images\Rest_API.png" alt="Img1" style="width:100%">
  </div>
  <div class="imgbox" style="background-color:#F3DECA">
  <img src=".\images\Rest_API1.png" alt="Img1" style="width:100%">
  </div>
  <div class="imgbox" style="background-color:#F3DECA">
  <img src=".\images\Rest_API2.png" alt="Img1" style="width:100%">
  </div>
</div>


<br>
<br>
<hr>


<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one"></p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">Restful APIs allow easy communiaciton btwn apps on various platforms using various languages for smooth communication </p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one"></p>
  </div>
</div>

<br>
<br>
<hr>



<hr>

<div class="clearfix">
  <div class="imgbox" style="background-color:#F3DECA">
  <img src=".\images\Rest_API2.png" alt="Img1" style="width:100%">
  </div>
  <div class="imgbox" style="background-color:#ebcfb5">
  <img src=".\images\CRUD.png" alt="Img1" style="width:100%">
  </div>
  <div class="imgbox" style="background-color:#F3DECA">
  <img src=".\images\CRUD1.png" alt="Img1" style="width:100%">
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one"></p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">HTTP's allow to call services provided by server <br><br>Services = CRUD Operations</p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one"></p>
  </div>
</div>


<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\Rest_API.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">RESTful API: Representational State Transfer</h1>
    <p class="one">
        <ol>RESTful API : </ol>
        <li>Allows us to request raw JSON data from a server </li><br>

        <li>Follows certain defect rules </li><br>
        
        <li>Organizers data into resources/bunch of URLS/URI's</li><br><br>
    </P>
    <p class="one">URI's: Uniform Resource Identifiers<br>
        URI's differentiate different types of data resources on a server<br><br>

        Client performs HTTP Request for data from server
    </p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\CRUD.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">SYNTAX: </h1>
    <p class="one"><br>
    POST    /SpecificURIName<br><br>
    Various headers<br><br>
    Body: contains custom payload of data</p>
  </div>
</div>


<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\HTTP_Methods.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <p class="one">
    <ul>Can use various methods:</ul>
    <li>GET     - Read Only</li>
    <li>POST     - Allows user to create New Resource</li>
    <li>PUT/ PATCH     - Updates whole/partial</li>
    <li>DELETE    - Removes Data</li>
    </p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Endpoints.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Headers:</h1>
    <p class="one">
    <ul> </ul>
    <li>Accept        - define the format you want to receive data</li><br>
    <li>Authorization     - tells server you're actually allowed to make that request</li>
    </p>
  </div>
</div>


<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Endpoints.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Headers:</h1>
    <p class="one">
        Server Responds by: <br>
            <ul> </ul>
            <li>Enacting some code to read from a database</li><br>
            <li>Sends response message.</li>
    </p>
  </div>
</div>


<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\CRUD.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Response Message Syntax :</h1>
    <p class="one">
    Status Code: tells user what happen with request <br><br>
    Response Headers: contains info about the server <br><br>
    Response Body: contains data payload, formatted in JSON for API's usually
    </p>
  </div>
</div>




<hr>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\CRUD.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Status Codes : </h1>
    <p class="one">
    <ul> </ul>
    <li><b>2** level:</b> things went well</li><br>
    <li><b>4** level:</b> problem with HTTP request from client side</li><br>
    <li><b>5** level:</b> server failed, server side error</li><br>
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\CRUD.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">API: Application Programming Interface</h1>
    <p class="one">
    This is Stateless:<br> <br>
    
    Stateless: <em> two parties don't store any information about each other</em><br>
    <br>
    Every server response cycle is independent form all other communication
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one">What is the difference btwn Express, NodeJS and Python Frameworks</p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">Most popular RESTful API <br><br>
  Express uses Node.JS easy with JavaScript</p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one">
  <ul>Need to Learn:</ul>
  
  <li>How to build a RESTful API from scratch</li>
  <li>Creating endpoints for API</li>
  <li>What is Middleware</li>
  <li>What tools help deploy an API: API Gateways</li>
  </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Endpoints.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">What is an ENDPOINT ? </h1>
    <p class="one">
        <ol><b>API folder or API subdomain is used : </b><ol><br><br>
            <li>Returns array of all users</li><br>
            <li>Returns specific user</li><br>
            <li>Creates New User by adding user to server/database</li><br>
            <li>Updates user, needs data about object</li><br>
            <li>Deletes user</li>
    </p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\EndPoint.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Address: HTTP/HTTPS </h1>
    <p class="one">
    
    HTTP/HTTPS : <br> - use depends on requirements<br><br>
    
    HTTPS- used to secure data on secure channel <br><br>
    
        Followed by : domain name, api, resource<br><br>

        Api used by companies to signal restful resources<br><br>
        
        Resource= customers, movies, rentals and various endpoints<br><br>

        ENDPOINT- all operations surround customer (creating a customer or updating a customer) will be done using this endpoint<br><br>


        This URL exposes the service the server offers to the customer<br><br>
        
        Server: Vidly Company<br><br>
        
        Clients: Send HTTP Requests to this endpoint to communicate with our
        service<br><br>

        HTTP have various request methods: get, post, put/patch, delete<br>
    </p>
  </div>
</div>


<br>
<br>
<hr>

<div class="clearfix">
  <div class="imgbox" style="background-color:#F3DECA">
  <img src=".\images\HTTP_GET.png" alt="Img1" style="width:100%">
  </div>
  <div class="imgbox" style="background-color:#ebcfb5">
  <img src=".\images\HTTP_GET1.png" alt="Img1" style="width:100%">
  </div>
  <div class="imgbox" style="background-color:#F3DECA">
  <img src=".\images\HTTP_PUT.png" alt="Img1" style="width:100%">
  </div>
</div>


<br>
<br>
<hr>


<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one">GET request to pull data<br><br>
  
  Pulls an array of customers
  </p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">
  Include the customer ID in address to pull specific customer.<br><br>
  Otherwise an array of cutomers will be pulled.</p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one">HTTP PUT Request:<br><br>
  
  Specifics the ID of the customer to be updated in the address.<br><br>
  </div>
</div>


<br>
<br>
<hr>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\HTTP_PUT.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one"> HTTP PUT Request : <br></h1>
    <p class="one">
        Specifics the ID of the customer to be updated in the address<br><br>

        Include the customer object in the request<br><br>
    
        Complete representation of cutomer object with updated properties<br><br>

    When this request is sent to the server the server updates the customer ids according to these values</p>
  </div>
</div>

<br>
<br>
<hr>








<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\HTTP_DELETE.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">HTTP DELETE Request : </h1>
    <p class="one">
    
    Specifics the ID of the customer to be deleted in the address <br><br>
    
    No properties are needed because the whole record is being deleted </p>
  </div>
</div>


<br>
<br>
<hr>


<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\HTTP_POST.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one"> HTTP POST Request :  </h1>
    <p class="one">
    No customer ID is specified in the address<br><br>

    bc we are adding a new customer we are working with the entire
    collection of customers<br><br>
    
    The object properties must be included<br><br>

    The server gets this object and creates the customer for us</p>
  </div>
</div>

<br>
<br>
<hr>
<br>
<br>
<hr>



<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\RESTful_convention.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one"> RESTful Convention :  </h1>
    <p class="one">
    We expose our resources such as customers using a simple meaningful
    adress <br><br>

    And support various operations around them like updating or creating
    new record using simple HTTP Requests </p>
  </div>
</div>

<br>
<br>
<hr>





<br>
<br>
<hr>



<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\HTTP_Methods.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <p class="one"> HTTP: standard way the web communicates<br><br><br>
    
    REST: made to be used with various languages<br><br><br>
    
    PHP, JavaScript, Rails, Java, Python all of these can make HTTP
    requests </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Authentication.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Authentication:</h1>
    <p class="one">
        <ol><b>Token -> 0AUTH-TOKEN : </b> </ol>
        
        <li>sends token inside header</li><br>
        <li>sends token as parameter inside URI</li><br>
        <li>doesn't send token itself but sends a generated client ID and secret as a parameter to your request </li>
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Authentication.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Open API's:<br></h1>
    <p class="one">
        Require no authentication<br><br>
        Just like previous examples : <br>
        
        DELETE /userID/1 <br><br>

        Sometimes may need to register APP w website, need to pay for data
        access <br><br>


        OAUTH: involves getting an accesss token and sending that along with
        request <br><br>

            If you attempt to make a request without the token you'll
            get an unauthorized error <br>
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Authentication.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">GITHUB API : </h1>
    <p class="one">
        Can use without any authentication but only allows 100
        requests per hour<br><br>

        If you go over you get unauthorized and you get an error
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Authentication.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">CURL requests--> </h1>
    <p class="one">
    CURL: tool that's used to transfer data using
                multiple protocols
                including: HTTP
    </p>
  </div>
</div>


<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Authentication.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">GITHUB API: </h1>
    <p class="one">
    *Check out GitHub's documentation for API's <br><br>


    can download postman : google chrome extension<br>
    <br>
        allows you to make requests easily
        
        
    </p>
  </div>
</div>


<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\Postman.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">Postman : </h1>
    <p class="one">
    Postman lets you make complicated requests<br><br>

        add a body to a request & <br>
        add a header (key value pair)<br>
        
        
        
    </p>
  </div>
</div>


<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\API_Authentication.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">How does authentication work if I'm sending a post request to twitters
        API? </h1>
    <p class="one">
    Most online website use 0Auth or Auth2 for their websites<br><br><br>



    <ol>Autho 0:</ol>

        <li>you get something like a username and a password they're called a Client ID and a Client Secret</li>

        <li>then you're exchanging those for an access token</li>

        <li>then that access token is passed to twitter</li>

        <li>the access token tells twitter that the tweet is coming from you (your twitter account)</li>
    </p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="img-container_two">
    <img src=".\images\TwitterAPIRequest.png" alt="Img1" style="width:100%">
  </div>

  <div class="column content">
    <h1 class="one">We're sending out a test tweet using postman's rest client </h1>
    <p class="one">
    HTTP Request method selected : POST<br><br>
    


    https://api.twitter.com/1.1/statuses/update.json<br><br><br>


    Server access: api.twitter.com<br>

    Tweet Sending Resource: Version 1.1 of the Twitter API<br>

    .json Tells twitter API that we want JSON formatted data as a response<br><br><br><br>


    
    Header: Authorization<br>
    Set to: 1.0 credentials<br><br><br><br>

        


    Body: Key: Value<br>
        Status Set To<br>
            Test tweet from postman<br><br><br>


    Click Send: info about tweet, when it was sent, from which twitter act<br>

    & when you click on twitter page, tweet actually shows up<br>
    </p>
  </div>
</div>

<br>
<br>
<hr>


<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one">Different webservices host data:<br>
  java, .net, angular, Node.JS</p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">Web-services:<br>
  provides common platform that allows apps built on various programming language to communcate with eachother<br>
  without too many fuck ups</p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one">Two types of webservices:<br><br>
  SOAP web services<br><br>
  RESTful web services</p>
  </div>
</div>

<br>
<br>
<hr>

<div class="clearfix">
  <div class="box" style="background-color:#F3DECA">
  <p class="one">Add Text</p>
  </div>
  <div class="box" style="background-color:#ebcfb5">
  <p class="one">Add Text</p>
  </div>
  <div class="box" style="background-color:#F3DECA">
  <p class="one">Add Text</p>
  </div>
</div>



<div class="footer">
  <p>Footer Text</p>
</div>

</body>

</html>
